/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     
    public void path(TreeNode root, int targetSum,ArrayList<Integer> list  ,List<List<Integer>> ans){
         if(root==null){
            return ;
        }
        targetSum-=root.val;
        list.add(root.val);
        if(targetSum==0 && root.left==null && root.right==null){
            ans.add(new ArrayList<Integer>(list));
            list.remove(list.size()-1); 
            return;
        }
        if(root.left==null && root.right==null){
            list.remove(list.size()-1); 
            return;
        }
     path(root.left, targetSum,list,ans);
     path(root.right, targetSum,list,ans);
     list.remove(list.size()-1);   
    }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
       
        List<List<Integer>> ans=new ArrayList<List<Integer>>(); ;
        ArrayList<Integer> list= new ArrayList<Integer>();
        path(root,targetSum,list,ans);
        return ans;
        
    }
}
