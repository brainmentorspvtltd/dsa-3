/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode add(ListNode l1, ListNode l2 ,int carry){
        if(l1==null && l2==null){
            if(carry==1){
                return new ListNode(carry);
            }
            else 
                return null;
        }
        
        ListNode temp;
         int val1=0;
        int val2=0;
        
        if(l1==null){
            val2=l2.val;
        }
        else if(l2==null){
            val1=l1.val;
        }
        else{    
        val1=l1.val;
        val2=l2.val;
        }
        
        int sum=val1+val2+carry;
        carry=0;
        if(sum>9){
            carry=1;
            sum=sum%10;
        }
        
        temp=new ListNode(sum);
        if(l1==null){
            temp.next=add(null,l2.next,carry);
        }
        else if(l2==null){
            temp.next=add(l1.next,null,carry);
        }
        else{
            temp.next=add(l1.next,l2.next,carry);
        }
        return temp;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2)     {
        
    return add(l1,l2,0);    
       
    }
}